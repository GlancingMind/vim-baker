*baker.txt*         Better `:make`!
*baker*

Select some targets of a makefile via a convenient completion system and `:make`
them.

================================================================================
CONTENTS                                                      *Baker-Contents*

                    1.  Usage....................|Baker-Usage|
                    2.  Commands..............|Baker-Commands|
                    3.  Mappings..............|Baker-Mappings|
                    4.  Settings..............|Baker-Settings|
                    5.  Good to know........|Baker-GoodToKnow|
                    6.  Contribute..........|Baker-Contribute|

================================================================================
USAGE                                                            *Baker-Usage*

Invoke the `:Baker` command with the arguments as stated in `:Baker`.
After that, {makeprg} will be set and you can call `:make` or `:Baker`
without any argument. Unless you have the need to select a different makefile
or target.

================================================================================
COMMANDS                                                      *Baker-Commands*

                                                                      *:Baker*
:Baker[!]  [args]       Set {makeprg} with targets from given makefile
                        and run `:make`. [args] are optional. When [args] is
                        empty `:make` will be invoked without arguments.
                        Otherwise [args] must be of below form:
                            {makefile} {target1} {target2} ...
                        {makefile} is the path to a makefile.
                        {target} is a target in the given {makefile}.
                        Selection of makefile and targets will be assited via
                        the completion system.
                        When [!] is given call `:make`! instead of `:make`

                                                            *:BakerClearCache*
:BakerClearCache        Empties the makefile cache.

================================================================================
MAPPINGS                                                      *Baker-Mappings*

There are no mappings in this plugin. But might add your own to your local
|vimrc|. I for example use the following:
                nnoremap    <c-m>       :Baker <C-L><C-L><C-D>

NOTE: Pressing <c-m> might be the same as pressing <ESC>.
<C-L> match first entry if only one is present. See |c_CTRL-L| for more info.
<C-D> show all possible completions. Checkout |c_CTRL-D|.

================================================================================
SETTINGS                                                      *Baker-Settings*

This plugin will introduce following global variables to alter some behaviour.

                                                       *g:Baker_MakefileGlobes*
`g:Baker_MakefileGlobes` is a list of globes for makefiles, which the plugin
uses to filter makefiles from unrelated files.
Default is ['GNUmakefile', 'makefile', 'Makefile'].~

                                                  *g:Baker_MakefileLookupPath*
`:Baker_MakefileLookupPath` shall be a path to an existing directory or file.
If it's a directory, the completion will look in this directory to complete
makefiles. If it's a file, this file will be automaticaly completed.
Default is './', indicating the current directory.~

                                                 *g:Baker_CompleteDirectories*
`:Baker_CompleteDirectories` is a boolean and indicates if directories shall
be completed by the completion. 0 for no completion. 1 to complete
directories.
Default is 1.~

================================================================================
GOOD TO KNOW                                                *Baker-GoodToKnow*

The Cache
---------

The completion must parse the selected makefile to suggest the makefiles
targets. In order to not parse every makefile over and over again, parsed
makefiles will be cached. When targets in a makefile are removed or added,
the cache must be cleared via `:BakerClearCash` to pickup the changes.

================================================================================
CONTRIBUTE                                                  *Baker-Contribute*

Grab the latest version or report a bug on GitHub:

http://github.com/UnintendedSideEffect/vim-baker

vim:tw=78:ts=8:ft=help:norl:
